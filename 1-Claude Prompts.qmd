---
title: "Claude Prompts"
subtitle: "for generating new DAG analysis code using synthetic data"
author: "Dan Swart"
format: 
  html:
    toc: true
    toc-float: true
    page-layout: article
    embed-resources: true
    code-fold: true
    code-summary: "Show the code"
    code-tools: true
    code-overflow: wrap
    code-block-bg: "#FAEBD7"
    code-block-border-left: "#31BAE9"
    code-link: true          # This adds individual buttons
    fig-width: 10
    fig-height: 8
    fig-align: center
    html-math-method: katex
    css: swart-20250327.css
  pdf:
    toc: true
    number-sections: true
    colorlinks: true
    papersize: letter
    geometry:
      - margin=1in
    fig-width: 10
    fig-height: 8
    fig-pos: 'H'
  typst:
    toc: true
    fig-width: 10
    fig-height: 8
    keep-tex: true
    prefer-html: true
---

# DAG ANALYSIS WITH SYNTHETIC DATA

## FIRST SUBMIT THE DAG ANALYSIS TEMPLATE CODE:

I will first transmit to you a fully operational DAG-analysis-with-synthetic-data-and-simpsons code to use as a TEMPLATE for my preferences for section headings, style, formatting and color as you process the new DAG.  I will submit to you the conceptional DAG code in the subsequent prompt.   It is not required that you mimic the template code precisely. You may need to alter it based on the structural characteristics of the new DAG analysis under consideration. 

I'm uploading this fully functional code to you BEFORE uploading the conceptual DAG code (to be actualized with the synthetic data you produce). Here's the TEMPLATE to keep in your memory as you process the upcoming conceptual DAG code.  Please follow and include ALL the items in the TEMPLATE because it contains items that may NOT already exist in the conceptual code.  Here it is:     



## SECOND SUBMIT THE CONCEPTIONAL DAG CODE:

Here is the conceptual DAG code.  Provide new code to analyze the conceptual DAG using synthetic data that you generate appropriate for the DAG under consideration.  Rules for composition of new code:


1. For DAG visualizations, use clean variable names without the descriptive labels '(Root Cause)'.  'Collider' or '(Confounder)' are fine.
2. ALWAYS use the DT() package, not the kable/kableExtra packages.
3. IF YOU PAUSE, ALWAYS "CONTINUE FROM ENDPOINT"
4. Check the current ending point of the artifact
5. Add only new content from that exact point forward
6. Never repeat any existing sections, code chunks, or YAML headers
7. Maintain unique chunk labels for any new code blocks
8. Keep the same document structure and styling
9. I expect a long, continuous Quarto document suitable for me to copy and paste into a new Quarto document
10. Maintain the same styling, color and theme in the new code as found in the template code
11. ALWAYS round to 3 decimal places, NOT 4.
12. Copy the YAML verbatim from the template with the exception of the title:  parameter.  That should reflect the new code matter.
13. For code structure and sequence, Follow the template exactly
14. Copy the DiagrammeR code precisely with regard to font family, font size, node colors, and node positions.  
15. Include an analysis to determine if Simpson's Paradox is evident in the data

3. IF YOU PAUSE, ALWAYS "CONTINUE FROM ENDPOINT"
4. Check the current ending point of the artifact
5. Add only new content from that exact point forward
6. Never repeat any existing sections, code chunks, or YAML headers
7. Maintain unique chunk labels for any new code blocks
8. Keep the same document structure and styling

DO NOT REPEAT CONTENT IN THE ARTIFACT!

Here is the new DAG conceptual code:     





# LEGISLATIVE CODE ANALYSIS 

## FIRST PROMPT - TEMPLATE CODE FOR ANALYZING LEGISLATION:


I am transmitting to you a fully operational TEMPLATE for building out tables based on your analysis of the legislative code sections that will come to you in the next prompt.  Use this a template for building out the tables for a new Quarto document based on the sections of legislation I will transmit in the next prompt.



I'm uploading this fully functional code to you BEFORE uploading the legislative code sections to be analyzed. 
Here's the TEMPLATE to keep in your memory as you process the legislative code sections that follow:  

DO NOTHING UNTIL YOU RECEIVE MY NEXT PROMPT



## SECOND SUBMIT PDF OF LEGISLATIVE CODE SECTIONS TO BE ANALYSED:


THERE ARE A LOT OF INSTRUCTIONS HERE SO READ THEM CAREFULLY

ANALYZE ONLY Article 5 (Sections 5.01 - 5.09). 
STOP ANALYSIS AT Article 5, Section 5.10. 
EXCLUDE Section 5.10 and all subsequent content.
Document this scope in the YAML description field.


Rules for composition of new code:

Follow the template EXACTLY but substitute the new information you glean from the attached pdf file.  

Pay attention to my preferences for categories, section headings, style, formatting and color as you process the new tables. 

Populate columns 1, 2, 3 AND 4 of the new MAIN TABLE based on your careful and thoughtful analysis of the pdf document. 

CREATE ALL THE SUPPLEMENTAL TABLES AS WELL.

ADD SECTION AT THE END NAMED "INTERESTING..." AND INCLUDE IN THAT SECTION (IN A VERY BRIEF WAY) ANY IRONIC OR COUNTER-INTUTIVE IMPLICATIONS OF THE LEGISLATIVE CODE YOU JUST ANALYZED - THIS IS SECTION IS NEW FOR THIS CYCLE OF TABLES.


1. ALWAYS use the DT() package, not the kable/kableExtra packages.
2. IF YOU PAUSE, ALWAYS "CONTINUE FROM ENDPOINT"
3. Check the current ending point of the artifact
4. Add only new content from that exact point forward
5. Never repeat any existing sections, code chunks, or YAML headers
6. Maintain unique chunk labels for any new code blocks
7. Keep the same document structure and styling
8. I expect a long, continuous Quarto document suitable for me to copy and paste into a new Quarto document
9. Maintain the same styling, color and theme in the new code as found in the template code
10. ALWAYS round to 3 decimal places, NOT 4.
11. Copy the YAML verbatim from the template with the exception of the "title" parameter.  That should reflect the the new code matter you analyze.
12. For code structure and sequence, Follow the template exactly

13. USE YOUR VERY BEST JUDGEMENT WHEN ANALYZING THE LEGISLATIVE INTENT.


DO NOT REPEAT CONTENT IN THE ARTIFACT!

Watch out for unexpected string constants

put in code to verify that there's a match in the number of rows between the different columns in the data frame. Make the code a generic check so the same code will work with all future jobs no matter how many rows are generated.  Ensure all pertinent vectors have exactly the same length.

Here is the pdf file with the legislative code for analysis. 






# PROMPT TO CREATE EXECUTIVE SUMMARIES FOR EARLIER FILES

## FIRST PROMPT:


Our earlier legislative code analysis did not contain an Executive Summary section where you put your opinions of the ironic or counter-intuitive aspects of the legislative code sections we analyzed.  

Here is a NEW, REVISED TEMPLATE for constructing the rmarkdown code that I can add to my existing QUARTO document.

DON'T DO ANYTHING UNTIL YOU GET MY NEXT PROMPT, which will contain the rmarkdown code we arrived at in our analysis of Article 4 of the legislative code.  Here's the TEMPLATE:   




## SECOND PROMPT:


Here is the relevant Quarto content for you to analyze and then create the brief executive summary.  

DO NOT INCLUDE A YAML OR LOAD ANY LIBRARIES.  

INCLUDE ALL RMARKDOWN SYNTAX AND FORMATTING.

DO NOT COPY ANY CODE WHATSOEVER FROM THE CONTENT PROVIDED.

I will be cutting and pasting this new code into my existing Quarto documents.






# REVISING OLD CODE WITH NEW EVALUATION CODES

## FIRST PROMPT



Here's the complete analysis code I created for

Article 3 

with my old 14-code system.


The new evaluation codes are based on these axioms:

Axioms:

- Central planning (one size fits all) degrades everyone's - performance
- Makes nearly every district action a legal matter.
- Robs people of taking pride in their work.
- Efforts at 'accountability' will not improve performance of anyone.
- Cooperation within an organization is far more effective than competition 
- All incentives work; some promote and some pervert the intention of the incentive


DON'T DO ANYTHING UNTIL YOU GET MY NEXT PROMPT




## SECOND PROMPT


THERE ARE A LOT OF RULES HERE SO READ CAREFULLY!

Using my new 7-code framework:

(Codes for Evaluation (down to 7 from 14))

A. Decreases intrinsic motivation in favor of extrinsic motivation
B. Decreases cooperation within districts in favor of competition for resources
C. Increases dependency on State funding and bureaucracy
D. Substitutes 'accountability' for improvement of the system people work in
E. Increases district administrative burdens
F. Decreases local control and flexibility
G. Treats people as the 'problem', instead of the system they work in


Re-evaluate each section and replace Column 4 with new codes.


For each section, ask: Does this provision...
- Code A: Decrease intrinsic motivation in favor of extrinsic?
- Code B: Decrease cooperation in favor of competition for resources?
- Code C. Increases dependency on State funding and bureaucracy?
- Code D. Substitute 'accountability' for improvement of the system people work in?
- Code E. Increases district administrative burdens?
- Code F. Decreases local control and flexibility?
- Code G. Treat people as the 'problem', instead of the system they work in?


Keep all existing analysis in Columns 1-3, only update the codes in Column 4.

Update the Supplemental Tables accordingly.

When updating the section named 'Opinionated Executive Summary and Counter-Intuitive Implications' KEEP THE TEXT AT THE FLESCH-KINCADE READING LEVLE OF 9th-10th GRADE LEVEL.


1. IF YOU PAUSE, ALWAYS "CONTINUE FROM ENDPOINT"
2. Check the current ending point of the artifact
4. Add only new content from that exact point forward
5. Never repeat any existing sections, code chunks, or YAML headers
6. Maintain unique chunk labels for any new code blocks
7. Keep the same document structure and styling
8. I expect a long, continuous Quarto document suitable for me to copy and paste into a new Quarto document
9. Maintain the same styling, color and theme in the new code as found in the template code
10. ALWAYS round to 3 decimal places, NOT 4.
11. Copy the YAML verbatim from the template with the exception of the "title" parameter.  That should reflect the the new code matter you analyze.
12. For code structure and sequence, Follow the template exactly

13. USE YOUR VERY BEST JUDGEMENT WHEN ANALYZING THE LEGISLATIVE INTENT.


IF YOU PAUSE, DO NOT REPEAT ANY CONTENT IN THE ARTIFACT!

Watch out for unexpected string constants

Include code to verify that there's a match in the number of rows between the different columns in the data frames so the Tables will come out right. Make that code a generic check so the same checking code will work with all future jobs no matter how many rows are generated.  Ensure all pertinent vectors have exactly the same length.

Make you 'Opinionated Executive Summary' using the tone of this example.  KEEP IT AT 9TH GRADE LEVEL.



## Executive Summary: Good Intentions Will Not Produce Desired Results

The policies in HB2 Article 2, which focus on teacher preparation and certification, might seem like good ideas, but they can actually hurt teaching. These policies are called "innovative" and "supportive," but they are likely to cause more problems.  

### Districts Trade 'Innovation' for Less Control and More State Power

Innovation districts are meant to give local schools more freedom by allowing them to skip some teacher certification rules. But in reality, these policies will take away local control (Code F in 48% of cases) and make schools more dependent on the state (Code C in 67% of cases). Schools shouldn’t need permission from the state to make real changes.

### Teacher Shortage 'Fix' That Makes Things Worse

Policies that let schools hire uncertified teachers and offer $1,000 payments may seem like a fix for teacher shortages. But they treat teachers as the problem, instead of fixing the real issue: the strict rules the state imposes that create false shortages (Code G in 43% of cases). The state causes shortages by making schools follow unnecessary rules and then offers small payments to solve the problem.

### Advanced Certification: More Money, Less Real Improvement

Policies that offer more pay ($3,000-$6,000 extra) for teachers with advanced certifications promise to improve student achievement. But they encourage teachers to collect certifications for the money, not to fix the system they work in (Code A in 67% of cases). This makes teaching about earning money, instead of helping students.

### Partnership Programs Can Waste Resources

Teacher preparation programs give large amounts of money ($10,000-$24,000 per candidate) to create partnerships between universities and schools. But these programs waste resources and create problems, like increasing state control (Code C), adding more paperwork (Code E in 71% of cases), and taking away local control (Code F). Instead of improving education, the state spends millions on partnerships that fall apart when the funding ends.

### Mentorship: Turning Help Into Competition

Mentorship programs give teachers $1,000 for helping new teachers, but they create competition for limited resources (Code B in 24% of cases). Instead of encouraging teamwork, these policies turn mentoring into a way to make extra money. There are already systems that encourage teachers to work together.

### The Quality of Preparation and Accountability Problem

Policies that require "research-based instructional materials" and "evidence-based strategies" for teacher preparation sound good, but they mostly focus on making schools follow rules instead of improving education (Code D in 52% of cases). These policies replace real change with "accountability theater." Words like "research-based" and "evidence-based" sound important, but they don’t really lead to better teaching.

### Local Talent Equals More State Control Over Teachers

"Grow Your Own" programs, which help local districts support high school students and employees who want to become teachers, sound good. But they limit local control (Code F) because the state tells districts exactly how to run these programs. Instead of being a community effort, these programs become another example of following state rules.

### Achievement Academy Turns Learning Into a Checklist

Achievement academy payments ($500-$1,000) are meant to support professional development, but they turn teaching into a system of rewards (Code A). Eventually, teachers will attend workshops for money, not because they want to learn. These programs feel more like getting credit hours than real opportunities for growth.

### Conclusion

These policies hurt the development of dedicated teachers. Instead of building on teachers’ passion for teaching, they create a system where teachers focus on collecting certifications and earning rewards. They weaken teamwork between teachers and harm local communities.

In the end, these policies don’t help students. They create a costly system that trains teachers to work within a broken system, rather than encouraging creative thinking and real teaching. The only people who benefit are the trainers and consultants.





